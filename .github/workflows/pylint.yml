name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Set a maximum timeout for the job
    strategy:
      matrix:
        python-version: ["3.11"]  # Start with only one Python version to simplify troubleshooting
    steps:
      # Step to check out the repository code
      - uses: actions/checkout@v4

      # Step to set up Python based on the matrix version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      # Cache pip packages to speed up installs
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies with increased timeout for pip install
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --timeout=100

      # Run pylint on Python files
      - name: Analyzing the code with pylint
        run: |
          pylint $(git ls-files '*.py')
